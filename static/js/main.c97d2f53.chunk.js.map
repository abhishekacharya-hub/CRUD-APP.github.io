{"version":3,"sources":["components/Login/index.js","components/Logout/index.js","components/Dashboard/Header.js","components/Dashboard/Table.js","components/Dashboard/Add.js","components/Dashboard/Edit.js","data/index.js","components/Dashboard/index.js","components/App/index.js","index.js"],"names":["Login","setIsAuthenticated","useState","email","setEmail","password","setPassword","className","onSubmit","e","preventDefault","Swal","fire","timer","showConfirmButton","willOpen","showLoading","willClose","icon","title","text","htmlFor","id","type","name","placeholder","value","onChange","target","style","marginTop","Logout","marginLeft","onClick","showCancelButton","confirmButtonText","then","result","Header","setIsAdding","marginBottom","Table","employees","handleEdit","handleDelete","forEach","employee","i","formatter","Intl","NumberFormat","currency","minimumFractionDigits","colSpan","length","map","firstName","lastName","format","salary","date","Add","setEmployees","setFirstName","setLastName","setSalary","setDate","newEmployee","push","Edit","selectedEmployee","setIsEditing","splice","employeesData","Dashboard","setSelectedEmployee","isAdding","isEditing","filter","cancelButtonText","App","isAuthenticated","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c97d2f53.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Login = ({ setIsAuthenticated }) => {\r\n  const adminEmail = 'admin@example.com';\r\n  const adminPassword = 'qwerty';\r\n\r\n  const [email, setEmail] = useState('admin@example.com');\r\n  const [password, setPassword] = useState('qwerty');\r\n\r\n  const handleLogin = e => {\r\n    e.preventDefault();\r\n\r\n    if (email === adminEmail && password === adminPassword) {\r\n      Swal.fire({\r\n        timer: 1500,\r\n        showConfirmButton: false,\r\n        willOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n        willClose: () => {\r\n          setIsAuthenticated(true);\r\n\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Successfully logged in!',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n        },\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        timer: 1500,\r\n        showConfirmButton: false,\r\n        willOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n        willClose: () => {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error!',\r\n            text: 'Incorrect email or password.',\r\n            showConfirmButton: true,\r\n          });\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"small-container\">\r\n      <form onSubmit={handleLogin}>\r\n        <h1>Admin Login</h1>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"admin@example.com\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          id=\"password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"qwerty\"\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <input style={{ marginTop: '12px' }} type=\"submit\" value=\"Login\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Logout = ({ setIsAuthenticated }) => {\r\n  const handleLogout = () => {\r\n    Swal.fire({\r\n      icon: 'question',\r\n      title: 'Logging Out',\r\n      text: 'Are you sure you want to log out?',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes',\r\n    }).then(result => {\r\n      if (result.value) {\r\n        Swal.fire({\r\n          timer: 1500,\r\n          showConfirmButton: false,\r\n          willOpen: () => {\r\n            Swal.showLoading();\r\n          },\r\n          willClose: () => {\r\n            setIsAuthenticated(false);\r\n          },\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <button\r\n      style={{ marginLeft: '12px' }}\r\n      className=\"muted-button\"\r\n      onClick={handleLogout}\r\n    >\r\n      Logout\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n","import React from 'react';\r\n\r\nimport Logout from '../Logout';\r\n\r\nconst Header = ({ setIsAdding, setIsAuthenticated }) => {\r\n  return (\r\n    <header>\r\n      <h1>Employee Management Software</h1>\r\n      <div style={{ marginTop: '30px', marginBottom: '18px' }}>\r\n        <button onClick={() => setIsAdding(true)}>Add Employee</button>\r\n        <Logout setIsAuthenticated={setIsAuthenticated} />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Table = ({ employees, handleEdit, handleDelete }) => {\r\n  employees.forEach((employee, i) => {\r\n    employee.id = i + 1;\r\n  });\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: null\r\n  });\r\n\r\n  return (\r\n    <div className=\"contain-table\">\r\n      <table className=\"striped-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>No.</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Email</th>\r\n            <th>Salary</th>\r\n            <th>Date</th>\r\n            <th colSpan={2} className=\"text-center\">\r\n              Actions\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {employees.length > 0 ? (\r\n            employees.map((employee, i) => (\r\n              <tr key={employee.id}>\r\n                <td>{i + 1}</td>\r\n                <td>{employee.firstName}</td>\r\n                <td>{employee.lastName}</td>\r\n                <td>{employee.email}</td>\r\n                <td>{formatter.format(employee.salary)}</td>\r\n                <td>{employee.date} </td>\r\n                <td className=\"text-right\">\r\n                  <button\r\n                    onClick={() => handleEdit(employee.id)}\r\n                    className=\"button muted-button\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                </td>\r\n                <td className=\"text-left\">\r\n                  <button\r\n                    onClick={() => handleDelete(employee.id)}\r\n                    className=\"button muted-button\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan={7}>No Employees</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Add = ({ employees, setEmployees, setIsAdding }) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [salary, setSalary] = useState('');\r\n  const [date, setDate] = useState('');\r\n\r\n  const handleAdd = e => {\r\n    e.preventDefault();\r\n\r\n    if (!firstName || !lastName || !email || !salary || !date) {\r\n      return Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error!',\r\n        text: 'All fields are required.',\r\n        showConfirmButton: true\r\n      });\r\n    }\r\n\r\n    const id = employees.length + 1;\r\n    const newEmployee = {\r\n      id,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      salary,\r\n      date\r\n    };\r\n\r\n    employees.push(newEmployee);\r\n    setEmployees(employees);\r\n    setIsAdding(false);\r\n\r\n    Swal.fire({\r\n      icon: 'success',\r\n      title: 'Added!',\r\n      text: `${firstName} ${lastName}'s data has been Added.`,\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"small-container\">\r\n      <form onSubmit={handleAdd}>\r\n        <h1>Add Employee</h1>\r\n        <label htmlFor=\"firstName\">First Name</label>\r\n        <input\r\n          id=\"firstName\"\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          value={firstName}\r\n          onChange={e => setFirstName(e.target.value)}\r\n        />\r\n        <label htmlFor=\"lastName\">Last Name</label>\r\n        <input\r\n          id=\"lastName\"\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          value={lastName}\r\n          onChange={e => setLastName(e.target.value)}\r\n        />\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <label htmlFor=\"salary\">Salary ($)</label>\r\n        <input\r\n          id=\"salary\"\r\n          type=\"number\"\r\n          name=\"salary\"\r\n          value={salary}\r\n          onChange={e => setSalary(e.target.value)}\r\n        />\r\n        <label htmlFor=\"date\">Date</label>\r\n        <input\r\n          id=\"date\"\r\n          type=\"date\"\r\n          name=\"date\"\r\n          value={date}\r\n          onChange={e => setDate(e.target.value)}\r\n        />\r\n        <div style={{ marginTop: '30px' }}>\r\n          <input type=\"submit\" value=\"Add\" />\r\n          <input\r\n            style={{ marginLeft: '12px' }}\r\n            className=\"muted-button\"\r\n            type=\"button\"\r\n            value=\"Cancel\"\r\n            onClick={() => setIsAdding(false)}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Add;\r\n","import React, { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Edit = ({ employees, selectedEmployee, setEmployees, setIsEditing }) => {\r\n  const id = selectedEmployee.id;\r\n\r\n  const [firstName, setFirstName] = useState(selectedEmployee.firstName);\r\n  const [lastName, setLastName] = useState(selectedEmployee.lastName);\r\n  const [email, setEmail] = useState(selectedEmployee.email);\r\n  const [salary, setSalary] = useState(selectedEmployee.salary);\r\n  const [date, setDate] = useState(selectedEmployee.date);\r\n\r\n  const handleUpdate = e => {\r\n    e.preventDefault();\r\n\r\n    if (!firstName || !lastName || !email || !salary || !date) {\r\n      return Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error!',\r\n        text: 'All fields are required.',\r\n        showConfirmButton: true\r\n      });\r\n    }\r\n\r\n    const employee = {\r\n      id,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      salary,\r\n      date\r\n    };\r\n\r\n    for (let i = 0; i < employees.length; i++) {\r\n      if (employees[i].id === id) {\r\n        employees.splice(i, 1, employee);\r\n        break;\r\n      }\r\n    }\r\n\r\n    setEmployees(employees);\r\n    setIsEditing(false);\r\n\r\n    Swal.fire({\r\n      icon: 'success',\r\n      title: 'Updated!',\r\n      text: `${employee.firstName} ${employee.lastName}'s data has been updated.`,\r\n      showConfirmButton: false,\r\n      timer: 1500\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"small-container\">\r\n      <form onSubmit={handleUpdate}>\r\n        <h1>Edit Employee</h1>\r\n        <label htmlFor=\"firstName\">First Name</label>\r\n        <input\r\n          id=\"firstName\"\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          value={firstName}\r\n          onChange={e => setFirstName(e.target.value)}\r\n        />\r\n        <label htmlFor=\"lastName\">Last Name</label>\r\n        <input\r\n          id=\"lastName\"\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          value={lastName}\r\n          onChange={e => setLastName(e.target.value)}\r\n        />\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <label htmlFor=\"salary\">Salary ($)</label>\r\n        <input\r\n          id=\"salary\"\r\n          type=\"number\"\r\n          name=\"salary\"\r\n          value={salary}\r\n          onChange={e => setSalary(e.target.value)}\r\n        />\r\n        <label htmlFor=\"date\">Date</label>\r\n        <input\r\n          id=\"date\"\r\n          type=\"date\"\r\n          name=\"date\"\r\n          value={date}\r\n          onChange={e => setDate(e.target.value)}\r\n        />\r\n        <div style={{ marginTop: '30px' }}>\r\n          <input type=\"submit\" value=\"Update\" />\r\n          <input\r\n            style={{ marginLeft: '12px' }}\r\n            className=\"muted-button\"\r\n            type=\"button\"\r\n            value=\"Cancel\"\r\n            onClick={() => setIsEditing(false)}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","const employeesData = [\r\n  {\r\n    id: 1,\r\n    firstName: 'Susan',\r\n    lastName: 'Jordon',\r\n    email: 'susan@example.com',\r\n    salary: '95000',\r\n    date: '2019-04-11'\r\n  },\r\n  {\r\n    id: 2,\r\n    firstName: 'Adrienne',\r\n    lastName: 'Doak',\r\n    email: 'adrienne@example.com',\r\n    salary: '80000',\r\n    date: '2019-04-17'\r\n  },\r\n  {\r\n    id: 3,\r\n    firstName: 'Rolf',\r\n    lastName: 'Hegdal',\r\n    email: 'rolf@example.com',\r\n    salary: '79000',\r\n    date: '2019-05-01'\r\n  },\r\n  {\r\n    id: 4,\r\n    firstName: 'Kent',\r\n    lastName: 'Rosner',\r\n    email: 'kent@example.com',\r\n    salary: '56000',\r\n    date: '2019-05-03'\r\n  },\r\n  {\r\n    id: 5,\r\n    firstName: 'Arsenio',\r\n    lastName: 'Grant',\r\n    email: 'arsenio@example.com',\r\n    salary: '65000',\r\n    date: '2019-06-13'\r\n  },\r\n  {\r\n    id: 6,\r\n    firstName: 'Laurena',\r\n    lastName: 'Lurie',\r\n    email: 'laurena@example.com',\r\n    salary: '120000',\r\n    date: '2019-07-30'\r\n  },\r\n  {\r\n    id: 7,\r\n    firstName: 'George',\r\n    lastName: 'Tallman',\r\n    email: 'george@example.com',\r\n    salary: '90000',\r\n    date: '2019-08-15'\r\n  },\r\n  {\r\n    id: 8,\r\n    firstName: 'Jesica',\r\n    lastName: 'Watlington',\r\n    email: 'jesica@example.com',\r\n    salary: '60000',\r\n    date: '2019-10-10'\r\n  },\r\n  {\r\n    id: 9,\r\n    firstName: 'Matthew',\r\n    lastName: 'Warren',\r\n    email: 'matthew@example.com',\r\n    salary: '71000',\r\n    date: '2019-10-15'\r\n  },\r\n  {\r\n    id: 10,\r\n    firstName: 'Lyndsey',\r\n    lastName: 'Follette',\r\n    email: 'lyndsey@example.com',\r\n    salary: '110000',\r\n    date: '2020-01-15'\r\n  }\r\n];\r\n\r\nexport { employeesData };\r\n","import React, { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Header from './Header';\r\nimport Table from './Table';\r\nimport Add from './Add';\r\nimport Edit from './Edit';\r\n\r\nimport { employeesData } from '../../data';\r\n\r\nconst Dashboard = ({ setIsAuthenticated }) => {\r\n  const [employees, setEmployees] = useState(employeesData);\r\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const handleEdit = id => {\r\n    const [employee] = employees.filter(employee => employee.id === id);\r\n\r\n    setSelectedEmployee(employee);\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleDelete = id => {\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, delete it!',\r\n      cancelButtonText: 'No, cancel!',\r\n    }).then(result => {\r\n      if (result.value) {\r\n        const [employee] = employees.filter(employee => employee.id === id);\r\n\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Deleted!',\r\n          text: `${employee.firstName} ${employee.lastName}'s data has been deleted.`,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n\r\n        setEmployees(employees.filter(employee => employee.id !== id));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {!isAdding && !isEditing && (\r\n        <>\r\n          <Header\r\n            setIsAdding={setIsAdding}\r\n            setIsAuthenticated={setIsAuthenticated}\r\n          />\r\n          <Table\r\n            employees={employees}\r\n            handleEdit={handleEdit}\r\n            handleDelete={handleDelete}\r\n          />\r\n        </>\r\n      )}\r\n      {isAdding && (\r\n        <Add\r\n          employees={employees}\r\n          setEmployees={setEmployees}\r\n          setIsAdding={setIsAdding}\r\n        />\r\n      )}\r\n      {isEditing && (\r\n        <Edit\r\n          employees={employees}\r\n          selectedEmployee={selectedEmployee}\r\n          setEmployees={setEmployees}\r\n          setIsEditing={setIsEditing}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from 'react';\r\n\r\nimport Login from '../Login';\r\nimport Dashboard from '../Dashboard';\r\n\r\nconst App = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated ? (\r\n        <Dashboard setIsAuthenticated={setIsAuthenticated} />\r\n      ) : (\r\n        <Login setIsAuthenticated={setIsAuthenticated} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}